Ideas
- add roof. use that other paper (on hallways) to construct. expand the perimeter by a small amount so that there's a little overhang
- texture the walls and the roof
- second floor, fits on top of the outline of the first floor (with fewer rooms). also staircases are now necessary
- furniture being dragged in from UI, integrating obj files
- decrease the amount by which the perimeter algorithm iterates
- ceiling for the first floor, use the perimeter algorithm
- add a ground, remove the room's floors

Done
- move basePos without moving room
- thick, 3d walls with normals on both sides (currently they are only '2D')
- removable walls, add a boolean for every wall. when a wall is rendered, check the boolean
- doors are added where the graph intersects with rooms
- an 'outside wall' that is textured differently to inside walls, check by having an outside rectangle bigger than the house that finds the closest parallel wall to its location (also use that rectangle for roof)

Unnecessary but good coding
- don't let basePos go outside room's boundaries
- implement new 'hitsARoom' function that finds if some thing is intersecting a room, and if so, which room they hit
- a 'roomElementSelected' function that sees what part of a room the user is trying to interact with, if at all
- use line strips / triangle strips for rendering to save GPU rendering time
